/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package petcare.view;

import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.Statement;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;
import petcare.control.GlobalValues;
import petcare.control.MyMSSQLControl;

/**
 *
 * @author ngoc
 */
public class DangNhap extends javax.swing.JFrame {

    static DefaultTableModel dtm = new DefaultTableModel();
    static int chucvu; //0-1-2 ||nguoi quan ly - bac sy - yta
    static boolean dangnhap = false;
    static String taikhoan;
    static String manv;

    /**
     * Creates new form dangnhap
     */
    public DangNhap() {
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(DangNhap.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(DangNhap.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(DangNhap.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(DangNhap.class.getName()).log(Level.SEVERE, null, ex);
        }
        initComponents();
        this.isVisible();
        getContentPane().setBackground(GlobalValues.formBackgroundColor);
        this.setLocationRelativeTo(null);
        //setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("ic_login.png")));
        loaddatabase();

    }

    public void loaddatabase() {
        Connection cn = null;
        Statement stt = null;
        ResultSet rs = null;
        try {
            cn = MyMSSQLControl.getConnect();
            if (cn == null) {
                JOptionPane.showMessageDialog(rootPane, "Lỗi kết nối cơ sở dữ liệu");
            }
            stt = cn.createStatement();
            String sql = "select * from NHANVIEN";
            rs = stt.executeQuery(sql); // lay du lieu chinh cua 1 ban
            ResultSetMetaData rsmd = rs.getMetaData(); // lay thong tin chung cua 1 bản
            Vector coloum = new Vector();
            for (int i = 1; i <= rsmd.getColumnCount(); i++) {
                coloum.add(rsmd.getColumnName(i));
                dtm.setColumnIdentifiers(coloum);
            }

            Vector row;
            while (rs.next()) {
                row = new Vector();
                row.addElement(rs.getNString(2));// load tennv -> chinh la user
                row.addElement(rs.getNString(1));// load manv 
                row.addElement(rs.getNString(8)); // load chucvu de kiem tra phân quyền đăng nhập dang hhap
                row.addElement(rs.getNString(11)); // load password 
                row.addElement(rs.getBoolean(9)); // load co luu mat khau ko
                row.addElement(rs.getInt(10));
                if (txtUsername.getText().equals(rs.getNString(2)) && txtPassword.getAction().equals(rs.getNString(11))) {
                    dangnhap = true;// xem viec dang nhap co thanh cong hay khong

                    //  chucvu=rs.getInt(10);// tra ve chuc vụ don gian hon dung cot NCHAR chucvu
                }
                dtm.addRow(row);

            }
        } catch (Exception e) {
            //JOptionPane.showMessageDialog(rootPane, "Lỗi kết nối dữ liệu");
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        btnLogin = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        btnRemember = new javax.swing.JCheckBox();
        btnForget = new javax.swing.JCheckBox();
        txtPassword = new javax.swing.JPasswordField();
        btnExit = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ĐĂNG NHẬP");
        setAlwaysOnTop(true);
        setBackground(java.awt.Color.cyan);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setForeground(java.awt.Color.darkGray);
        setLocation(new java.awt.Point(300, 250));
        setResizable(false);

        btnLogin.setForeground(new java.awt.Color(0, 204, 153));
        btnLogin.setText("Đăng nhập");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 153, 153));
        jLabel2.setText("Đăng nhập");

        jLabel3.setForeground(new java.awt.Color(0, 204, 153));
        jLabel3.setText("Tài khoản");

        jLabel4.setForeground(new java.awt.Color(0, 204, 153));
        jLabel4.setText("Mật khẩu");

        txtUsername.setToolTipText("Nhập mã nhân viên");
        txtUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUsernameActionPerformed(evt);
            }
        });

        btnRemember.setForeground(new java.awt.Color(0, 204, 153));
        btnRemember.setMnemonic('N');
        btnRemember.setText("Nhớ mật khẩu");
        btnRemember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRememberActionPerformed(evt);
            }
        });

        btnForget.setForeground(new java.awt.Color(0, 204, 153));
        btnForget.setText("Quên mật khẩu");
        btnForget.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnForgetActionPerformed(evt);
            }
        });

        txtPassword.setToolTipText("Nhập mật khẩu của bạn");
        txtPassword.setEchoChar('*');
        txtPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPasswordActionPerformed(evt);
            }
        });

        btnExit.setForeground(new java.awt.Color(0, 204, 153));
        btnExit.setText("Thoát");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/petcare/view/drawable/user_yellow_96px.png"))); // NOI18N
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 204, 153)));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(btnRemember)
                            .addGap(18, 18, 18)
                            .addComponent(btnForget))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3)
                                .addComponent(jLabel4))
                            .addGap(27, 27, 27)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtUsername)
                                .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(btnLogin)
                            .addGap(27, 27, 27)
                            .addComponent(btnExit))))
                .addGap(35, 35, 35))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel2)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(61, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnRemember)
                            .addComponent(btnForget))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnLogin)
                            .addComponent(btnExit))
                        .addGap(28, 28, 28))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed

        for (int i = 0; i < dtm.getRowCount(); i++) {
            for (int j = 0; j < dtm.getColumnCount(); j++) {
                // kieu du lieu dung trong sql nen la nvarchar de so sanh unicode va khong bị du khoan trang thua
                // tam thoi chua fix duoc bug dung getPassWord
                if (txtUsername.getText().equals(dtm.getValueAt(i, 0)) && txtPassword.getText().equals(dtm.getValueAt(i, 3))) {
                    dangnhap = true;
                    chucvu = Integer.parseInt(dtm.getValueAt(i, 5).toString());
                    manv = dtm.getValueAt(i, 1).toString();
                    //JOptionPane.showMessageDialog(rootPane, String.valueOf(chucvu));
                    taikhoan = txtUsername.getText();
                    if (btnForget.isSelected()) {
                        Connection conn = null;
                        try {
                            conn = MyMSSQLControl.getConnect();
                            if (conn == null) {
                                JOptionPane.showMessageDialog(rootPane, "loi ket noi!!");
                            }
                            String sql = "update NHANVIEN set NMK=? where TENNV=?";
                            PreparedStatement ps = conn.prepareStatement(sql);
                            ps.setString(1, "0");
                            ps.setString(2, txtUsername.getText());
                            int a = ps.executeUpdate();
                            if (a > 0) {
                                dtm.setRowCount(0);// DE LOAD DU LIEU LAI TU DAU , NEU KO DU LIEU SE DUOC GHI DE LEN CAC ROW TIEP THEO     
                            }
                        } catch (Exception e) {

                        }
                    }

                    if (btnRemember.isSelected()) // xu lý khi tài khoan mat khau dung ma muon nho mat khau
                    {
                        Connection conn = null;
                        try {
                            conn = MyMSSQLControl.getConnect();
                            if (conn == null) {
                                JOptionPane.showMessageDialog(rootPane, "loi ket noi!!");
                            }
                            String sql = "update NHANVIEN set NMK=? where TENNV=?";
                            PreparedStatement ps = conn.prepareStatement(sql);
                            ps.setString(1, "1");
                            ps.setString(2, txtUsername.getText());
                            int a = ps.executeUpdate();
                            if (a > 0) {
                                dtm.setRowCount(0);// DE LOAD DU LIEU LAI TU DAU , NEU KO DU LIEU SE DUOC GHI DE LEN CAC ROW TIEP THEO     
                            }
                        } catch (Exception e) {
                        }

                    }
                    try {
                        main m = new main(taikhoan, chucvu);

                        this.setVisible(false);
                        m.setVisible(true);

                    } catch (IOException ex) {
                        Logger.getLogger(DangNhap.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    break;
                }
            }
        }
        if (dangnhap == false) {
            JOptionPane.showMessageDialog(rootPane, "Mật khẩu hoặc tài khoản bị sai!!");
        }


    }//GEN-LAST:event_btnLoginActionPerformed

    private void btnRememberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRememberActionPerformed
        if (btnRemember.isSelected() && txtUsername.getText() != "")// neu mat khau da duoc luu thi tu dong load
        {
            for (int i = 0; i < dtm.getRowCount(); i++) {
                for (int j = 0; j < dtm.getColumnCount(); j++) {
                    // kieu du lieu dung trong sql nen la nvarchar de so sanh unicode va khong bị du khoan trang thua
                    // tam thoi chua fix duoc bug dung getPassWord
                    if (txtUsername.getText().equals(dtm.getValueAt(i, 0)) && dtm.getValueAt(i, 4).equals(true)) {

                        manv = dtm.getValueAt(i, 1).toString();
                        txtPassword.setText(dtm.getValueAt(i, 3).toString());
                        break;
                    }
                }
            }
        }
    }//GEN-LAST:event_btnRememberActionPerformed

    private void txtPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPasswordActionPerformed
        String cm = evt.getActionCommand();// hoac co the su dung ham getpassword nhung ko co tac dung khi enter
        for (int i = 0; i < dtm.getRowCount(); i++) {
            for (int j = 0; j < dtm.getColumnCount(); j++) {
                // kieu du lieu dung trong sql nen la nvarchar de so sanh unicode va khong bị du khoan trang thua
                if (txtUsername.getText().equals(dtm.getValueAt(i, 0)) && cm.equals(dtm.getValueAt(i, 3))) {
                    dangnhap = true;
                    chucvu = Integer.parseInt(dtm.getValueAt(i, 5).toString());
                    manv = dtm.getValueAt(i, 1).toString();
                    taikhoan = txtUsername.getText();
                    try {
                        main m = new main(taikhoan, chucvu);
                        this.setVisible(false);
                        m.setVisible(true);
                    } catch (IOException ex) {
                        Logger.getLogger(DangNhap.class.getName()).log(Level.SEVERE, null, ex);
                    }

                    break;
                }
            }
        }

        if (dangnhap == false) {
            JOptionPane.showMessageDialog(rootPane, "Mật khẩu hoặc tài khoản bị sai!!");
        }
    }//GEN-LAST:event_txtPasswordActionPerformed

    private void txtUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUsernameActionPerformed
        String cm = evt.getActionCommand();// hoac co the su dung ham getpassword nhung ko co tac dung khi enter
        for (int i = 0; i < dtm.getRowCount(); i++) {
            for (int j = 0; j < dtm.getColumnCount(); j++) {
                // kieu du lieu dung trong sql nen la nvarchar de so sanh unicode va khong bị du khoan trang thua
                if (cm.equals(dtm.getValueAt(i, 0)) && txtPassword.getText().equals(dtm.getValueAt(i, 3))) {
                    dangnhap = true;
                    manv = dtm.getValueAt(i, 1).toString();
                    chucvu = Integer.parseInt(dtm.getValueAt(i, 5).toString());
                    taikhoan = cm;
                    try {
                        main m = new main(taikhoan, chucvu);
                        this.setVisible(false);
                        m.setVisible(true);
                    } catch (IOException ex) {
                        Logger.getLogger(DangNhap.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    break;
                }
            }
        }
        if (dangnhap == false) {
            JOptionPane.showMessageDialog(rootPane, "Mật khẩu hoặc tài khoản bị sai!!");
        }
    }//GEN-LAST:event_txtUsernameActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btnExitActionPerformed

    private void btnForgetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnForgetActionPerformed
        // TODO add your handling code here:
        if (btnForget.isSelected() && txtUsername.getText() != "")// neu mat khau da duoc luu thi tu dong load
        {
            for (int i = 0; i < dtm.getRowCount(); i++) {
                for (int j = 0; j < dtm.getColumnCount(); j++) {
                    // kieu du lieu dung trong sql nen la nvarchar de so sanh unicode va khong bị du khoan trang thua
                    // tam thoi chua fix duoc bug dung getPassWord
                    if (txtUsername.getText().equals(dtm.getValueAt(i, 0)) && dtm.getValueAt(i, 4).equals(true)) {

                        manv = dtm.getValueAt(i, 1).toString();
                        txtPassword.setText(dtm.getValueAt(i, 3).toString());
                        break;
                    }
                }
            }
        }
    }//GEN-LAST:event_btnForgetActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DangNhap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DangNhap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DangNhap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DangNhap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DangNhap().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExit;
    private javax.swing.JCheckBox btnForget;
    private javax.swing.JButton btnLogin;
    private javax.swing.JCheckBox btnRemember;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
